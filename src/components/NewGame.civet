import { Component } from "solid-js"
import { createStore } from "solid-js/store"
import { Adversary, Config } from "../model.civet"

type NewGameComponent = Component<{
  config: Config,
  closeDialog: () => void,
  newGame: (config: Config) => void,
}>

adversaries := [["human", "Humain"], ["level1", "DÃ©butant"], ["level2", "Moyen"], ["level3", "Difficile"]]

NewGame: NewGameComponent := (props) =>
  [config, setConfig] := createStore {...props.config}

  <div class="dialog-title">Nouvelle partie
  <div class="dialog-body grid grid-cols-20/80 gap-8">
    <div class="text-bold text-lg">Adversaire
    <div class="flex gap-4 text-lg">
      {adversaries.map(([name, fullname]) =>
        <button
          class="togglebtn"
          classList={"toggledbtn": name === config.adversary}
          onClick={=> setConfig("adversary", name as Adversary)}
        > {fullname}
      )}
    <div class="text-bold text-lg">Qui commence
    <div class="flex gap-4 text-lg">
      {[false, true].map((b) =>
        <button
          class="togglebtn"
          classList={{"toggledbtn": b === config.machineStarts}}
          onClick={=> setConfig("machineStarts", b)}
        >{b ? "Machine" : "Humain"}
      )}
  <div class="dialog-buttons">
    <button class="btn" onClick={props.closeDialog}>Annuler
    <button class="btn" onClick={[props.newGame, config]}>OK

export default NewGame